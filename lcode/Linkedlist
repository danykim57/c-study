/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode();
        ListNode* curr = ans;
        int sum = l1->val + l2->val;
        if(sum > 9) {
            sum = sum % 10;
            curr->next = new ListNode(1);
        }
        ans->val = sum; 
        while(l1->next != nullptr || l2->next != nullptr){
            if(curr->next == nullptr){
                curr->next = new ListNode();
            }
            curr = curr->next;
            if(l1->next != nullptr && l2->next != nullptr){
                l1 = l1->next;
                l2 = l2->next;
                sum = curr->val + l1->val + l2->val;
                if(sum > 9) {
                    sum = sum % 10;
                    curr->next = new ListNode(1);
                }
                curr->val = sum;
            }
            else if(l1->next != nullptr){
                l1 = l1->next;
                sum = curr->val + l1->val;
                if(sum > 9) {
                    sum = sum % 10;
                    curr->next = new ListNode(1);
                }
                curr->val = sum;
            }
            else if(l2->next != nullptr){
                l2 = l2->next;
                sum = curr->val + l2->val;
                if(sum > 9) {
                    sum = sum % 10;
                    curr->next = new ListNode(1);
                }
                curr->val = sum;
            }
        }
        return ans;
    }
};
